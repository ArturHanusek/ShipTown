<?php

namespace Tests\Feature\Http\Controllers\Api;

use App\Models\Product;
use App\User;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\Api\ProductController
 */
class ProductControllerTest extends TestCase
{
//    /**
//     * A basic feature test example.
//     *
//     * @return void
//     */
//    public function testGet()
//    {
////        $response = $this->get('/api/products?&');
//    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        Product::query()->forceDelete();
        factory(Product::class)->create();

        $user = factory(User::class)->create();

        $response = $this->actingAs($user, 'api')->getJson(route('products.index', [
            'include' => [
                'inventory',
                'aliases',
                'tags'
            ],
            'filter[inventory_source_location_id]' => 1,
        ]));

        $response->assertOk();

//        $this->assertNotEquals(0, $response->json('meta.total'));

        $response->assertJsonStructure([
//            'meta',
//            'links',
            'data' => [
                '*' => [
                    'id',
                    'sku',
                    'name',
                    'price',
                    'sale_price',
                    'sale_price_start_date',
                    'sale_price_end_date',
                    'quantity',
                    'quantity_reserved',
                    'quantity_available',
                    'deleted_at',
                    'created_at',
                    'updated_at',
                    'inventory_source_shelf_location',
                    'inventory_source_quantity',
                    'inventory_source_product_id',
                    'inventory_source_location_id',
                    'inventory' => [
                        '*' => []
                    ],
                    'aliases' => [
                        '*' => []
                    ],
                    'tags' => [
                        '*' => []
                    ],
                ]
            ]
        ]);
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->actingAs($user, 'api')->postJson(route('products.store'), [
            // TODO: send request data
        ]);

        $response->assertOk();
        $response->assertJsonStructure([
            // TODO: compare expected response data
        ]);

        // TODO: perform additional assertions
    }

    // test cases...
}
