<?php

namespace Tests\Feature\Modules\InventoryReservations\Jobs;

use App\Models\Inventory;
use App\Models\OrderStatus;
use App\Models\Product;
use App\Models\Warehouse;
use App\Modules\InventoryReservations\src\EventServiceProviderBase;
use App\Modules\InventoryReservations\src\Jobs\DetectAndFixIncorrectQuantityJob;
use App\Modules\InventoryReservations\src\Jobs\RecalculateQuantityReservedJob;
use App\User;
use Tests\TestCase;

/**
 * Class OrderCreatedTest.
 */
class DetectAndFixIncorrectQuantityJobTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        factory(Warehouse::class)->create([]);

        factory(Product::class)->create();
    }

    /** @test */
    public function test_one()
    {
        Product::query()->update(['quantity' => rand(1, 10)]);
        Inventory::query()->update(['quantity' => 0]);

        DetectAndFixIncorrectQuantityJob::dispatch();

        $this->assertDatabaseHas('products', ['quantity' => 0]);
    }

    /** @test */
    public function test_two()
    {
        Product::query()->update(['quantity' => 0]);
        Inventory::query()->update(['quantity' => 1]);

        ray(Product::query()->get()->toArray(), Inventory::query()->get()->toArray());

        DetectAndFixIncorrectQuantityJob::dispatch();

        $this->assertDatabaseHas('products', ['quantity' => Inventory::query()->count()]);
    }
}
