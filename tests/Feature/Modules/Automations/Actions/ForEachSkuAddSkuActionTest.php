<?php

namespace Tests\Feature\Modules\Automations\Actions;

use App\Events\Order\ActiveOrderCheckEvent;
use App\Models\Order;
use App\Models\OrderProduct;
use App\Models\Product;
use App\Modules\Automations\src\Actions\ForEachSkuAddSkuAction;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ForEachSkuAddSkuActionTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @var Order
     */
    private Order $order;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->order = factory(Order::class)->create();

        $product1 = factory(Product::class)->create(['sku' => '123']);
        $product2 = factory(Product::class)->create(['sku' => '456']);
        $product3 = factory(Product::class)->create(['sku' => '789']);

        factory(OrderProduct::class)->create([
            'order_id' => $this->order->getKey(),
            'product_id' => $product1->getKey()
        ]);

        factory(OrderProduct::class)->create([
            'order_id' => $this->order->getKey(),
            'product_id' => $product2->getKey()
        ]);
    }

    /**
     */
    public function test_successful_action()
    {
        $event = new ActiveOrderCheckEvent($this->order);
        $action = new ForEachSkuAddSkuAction($event);

        // act
        $actionSucceeded = $action->handle('123,789');

        // validate
        $this->assertTrue($actionSucceeded, 'Action returned false');

        $this->assertEquals(3, $this->order->orderProducts()->count(), 'SKU not added');
    }

    public function test_incorrect_inputs()
    {
        $event = new ActiveOrderCheckEvent($this->order);
        $action = new ForEachSkuAddSkuAction($event);

        // act
        $this->assertFalse($action->handle(''), 'Blank value should not be allowed');
        $this->assertFalse($action->handle('123'), 'Two SKUs shold be present');
        $this->assertFalse($action->handle('123,'),'Blank second sku not be blank');
        $this->assertFalse($action->handle('456,456'), 'Same SKUs should not be allowed');
    }
}
